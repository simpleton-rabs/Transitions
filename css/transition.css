/* target all elements*/
*{
    margin: 0;
    /* Usually used with flex */
    box-sizing: border-box;
}


body{
    /* background-color: blue; */
    /* body as flex container with child elements centered vertically and horizontally */
    display: flex;
    align-items: center;
    justify-content:center;
    /* viewpoint height is relative - vh is equivalent to 1% of viewpoint height - without this body defaults to height of child elements */
    height: 100vh;
}

p{
    font-size: 18px;
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    margin-bottom: 10px;

}

#container{
    width: 500px;
    border: 1px solid;
    padding: 20px;
}

.disk{
    width: 60px;
    height: 60px;
    border-radius: 50%;
    /* Default original position of disk - Wouldn't this default to 0 position? Not for transition to work we must have original position set*/
    /* transform: translateX(0px), rotatez(0deg); */
    /* transform:  */
    translateX(0px) rotatez(0deg); 
    /* opacity: 25%; */
    background-image: url("../images/moon.png");
}

.disk:active{
    transform: translateX(400px) rotatez(360deg);
}

/* Standard Ease */
#disk1{
    background-color: red;
    transition: transform 2s;
    

}

/* linear  */
#disk2{
    background-color: orange;
    transition: transform 2s linear;
}

/* ease in */
#disk3{
    background-color: yellow;
    transition: transform 2s ease-in;
}

/* ease out */
#disk4{
    background-color: green;
    transition: transform 2s ease-out;
}

/* ease in out */
#disk5{
    background-color: blue;
    transition: transform 2s ease-in-out;
}

/* Cubic Bezier 1 */
#disk6{
    background-color: indigo;
    transition: transform 2s ease-in-out;
}

/* Cubic Bezier 2 */
#disk7{
    background-color: violet;
    transition: transform 2s ease-in-out;
}

